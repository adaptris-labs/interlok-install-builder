apply plugin:  "distribution"

ext {
  defaultNexusRepo = project.hasProperty('defaultNexusRepo') ? project.getProperty('defaultNexusRepo') : 'https://repo1.maven.org/maven2/'
  nexusBaseUrl  = project.hasProperty('nexusBaseUrl') ? project.getProperty('nexusBaseUrl') : 'https://nexus.adaptris.net'
  interlokInstallDirectory = project.hasProperty('interlokInstallDirectory') ? project.getProperty('interlokInstallDirectory') :  "${buildDir}/install/${project.name}"

  // Dependabot doesn't currently "like" declarations like this for versioning.
  // interlokCoreVersion = project.hasProperty('interlokCoreVersion') ? project.getProperty('interlokCoreVersion') : '3.8-SNAPSHOT'
  // interlokWarVersion = project.hasProperty('interlokWarVersion') ? project.getProperty('interlokWarVersion') : interlokCoreVersion

  interlokCoreVersion='3.8.4-RELEASE'
  interlokWarVersion='3.8.4-RELEASE'
  log4j2Version='2.11.2'
  slf4jVersion='1.7.26'

  lineSeparator = System.getProperty("line.separator")

}

distTar.enabled=false
distZip.enabled=false

repositories {
  mavenCentral()
  maven { url "$defaultNexusRepo" }
  maven { url "https://nexus.adaptris.net/nexus/content/groups/public" }
  maven { url "https://nexus.adaptris.net/nexus/content/repositories/snapshots" }
  maven { url "https://nexus.adaptris.net/nexus/content/repositories/releases" }
}

configurations() {
  interlokRuntime{}
  interlokJavaDocs{}
  interlokWar{}
}

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, "seconds"
}

dependencies {
  interlokRuntime  group: "com.adaptris", name: "interlok-boot",           version: "$interlokCoreVersion", changing: true
  interlokJavaDocs group: "com.adaptris", name: "interlok-boot",           version: "$interlokCoreVersion", changing: true, classifier: "javadoc", transitive: false
  interlokRuntime  group: "com.adaptris", name: "interlok-core",           version: "$interlokCoreVersion", changing: true
  interlokJavaDocs group: "com.adaptris", name: "interlok-core",           version: "$interlokCoreVersion", changing: true, classifier: "javadoc", transitive: false
  interlokRuntime  group: "com.adaptris", name: "interlok-common",         version: "$interlokCoreVersion", changing: true
  interlokJavaDocs group: "com.adaptris", name: "interlok-common",         version: "$interlokCoreVersion", changing: true, classifier: "javadoc", transitive: false
  interlokRuntime  group: "com.adaptris", name: "interlok-logging",        version: "$interlokCoreVersion", changing: true
  interlokJavaDocs group: "com.adaptris", name: "interlok-logging",        version: "$interlokCoreVersion", changing: true, classifier: "javadoc", transitive: false
  interlokRuntime  group: "com.adaptris", name: "interlok-varsub",         version: "$interlokCoreVersion", changing: true
  interlokJavaDocs group: "com.adaptris", name: "interlok-varsub",         version: "$interlokCoreVersion", changing: true, classifier: "javadoc", transitive: false
  interlokRuntime  group: "com.adaptris", name: "interlok-json",           version: "$interlokCoreVersion", changing: true
  interlokJavaDocs group: "com.adaptris", name: "interlok-json",           version: "$interlokCoreVersion", changing: true, classifier: "javadoc", transitive: false
  interlokRuntime  group: "com.adaptris", name: "interlok-apache-http",    version: "$interlokCoreVersion", changing: true
  interlokJavaDocs group: "com.adaptris", name: "interlok-apache-http",    version: "$interlokCoreVersion", changing: true, classifier: "javadoc", transitive: false
  interlokRuntime  group: "com.adaptris", name: "interlok-service-tester", version: "$interlokCoreVersion", changing: true
  interlokJavaDocs group: "com.adaptris", name: "interlok-service-tester", version: "$interlokCoreVersion", changing: true, classifier: "javadoc", transitive: false

  interlokRuntime group: "org.slf4j", name: "slf4j-api",      version: "$slf4jVersion"
  interlokRuntime group: "org.slf4j", name: "jcl-over-slf4j", version: "$slf4jVersion"
  interlokRuntime group: "org.slf4j", name: "jul-to-slf4j",   version: "$slf4jVersion"

  interlokRuntime group: "org.apache.logging.log4j", name: "log4j-core",       version: "$log4j2Version"
  interlokRuntime group: "org.apache.logging.log4j", name: "log4j-1.2-api",    version: "$log4j2Version"
  interlokRuntime group: "org.apache.logging.log4j", name: "log4j-slf4j-impl", version: "$log4j2Version"
  interlokRuntime group: "org.apache.logging.log4j", name: "log4j-api",        version: "$log4j2Version"

  interlokWar group: "com.adaptris.ui", name: "interlok", version: "$interlokWarVersion", ext: "war", changing: true
}

distributions {
  main {
    contents {
      from {
        "src/main/interlok"
      }
      into('lib') {
        from(project.configurations.interlokRuntime)
      }
      into('webapps') {
        from(project.configurations.interlokWar)
      }
      into('docs/javadocs') {
        from(project.configurations.interlokJavaDocs)
      }
      rename '(.*)-[0-9]+\\..*.jar', '$1.jar'
      rename '(.*)-[0-9]+\\..*.war', '$1.war'
    }
  }
}

installDist {
    destinationDir = new File(interlokInstallDirectory)
}

task cleanInstall () {
  description 'Delete install directory'
  group 'build'
  doLast {
    new File(interlokInstallDirectory).deleteDir()
  }
}
